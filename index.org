#+REVEAL_THEME: night
#+OPTIONS: toc:1, num:nil, f:t
#+REVEAL_ROOT: file:///Users/timmciver/Workspace/reveal.js



* The Problem Statement

** Can we attain the same level of generalized dispatch on values of a type using an Object-Oriented language that our friends using functional languages enjoy?
#+ATTR_REVEAL: :frag appear
Answer: Yes!
#+ATTR_REVEAL: :frag appear
Well, almost.


* An Example

** Dispatching on Values in Scala
#+BEGIN_SRC scala
object Payroll {

  sealed trait Frequency
  case object class Weekly
  case object class Monthy
  case object class Annually

  def timesPerYear(freq: Frequency) = freq match {
    case Weekly => 52
    case Monthy => 12
    case Annually => 1
  }
}
#+END_SRC

** Dispatching on Values in PHP
#+BEGIN_SRC php
interface Frequency {
  function timesPerYear()
}

class Weekly implements Frequency {
  public function timesPerYear() { return 52; }
}

class Monthly implements Frequency {
  public function timesPerYear() { return 12; }
}

class Annually implements Frequency {
  public function timesPerYear() { return 1; }
}
#+END_SRC


* Review of Some Fundamentals

** What is a type?

A type is simply a set of values.

For example:
- booleans can have a value of "true" or "false"
- integers can be any integer, usually within some range.

** Dynamic Dispatch

** Algebraic Data Types


* Example of the Problem

* Pattern Matching: What Is It?

** Pattern Matching 101
"pattern matching is the act of checking a given sequence of tokens for the presence of the constituents of some pattern." - Wikipedia




* Simulating ADTs in OO

** Can We Have Algebraic Data Types in an OO Language? Yes!



* The Visitor Pattern to the Rescue!
